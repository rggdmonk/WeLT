[project]
name = "WeLT"
description = "WeLT: Word embedding Latent Transformer - a language model designed to operate on \"words\"."
version = "0.0.1"
authors = [
    { name = "Amit Moryossef", email = "amit@sign.mt" },
]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "transformers[torch]",
    "torch",
    "trl", # For huggingface implementation of pack_dataset
    "datasets",
    "Pillow", # For AutoImageProcessor
    "torchvision", # For use_fast=True
    "cachetools", # For LRU cache in processor
    "vit-pytorch", # For NaViT model implementation
    # Our packages
    "words-segmentation", # For pre-tokenization into words
    "utf8-tokenizer", # For tokenization of bytes
    "pixel-renderer", # For text rendering into images
]

[project.optional-dependencies]
dev = [
    "ruff",
    "pytest",
    "pytest-xdist", # For parallel test execution
]

train = [
    "modal", # Used to run training jobs
    "hf_transfer", # For HF_HUB_ENABLE_HF_TRANSFER
    "accelerate", # For distributed training
    "datasets", # For dataset loading and processing
    "evaluate", # For evaluation metrics
    "scikit-learn", # For "accuracy" metric in evaluate
    "wandb", # For experiment tracking
]

[tool.setuptools]
packages = [
    "welt",
    "welt.vision",
]

[tool.ruff]
line-length = 120
extend-exclude = [
    "training/experiments/*",
    "welt/vision/masked_vit_patcher.py", # Hacky patching file
]

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "C90", # mccabe complexity
    "I", # isort
    "N", # pep8-naming
    "UP", # pyupgrade
    "B", # flake8-bugbear
    "PT", # flake8-pytest-style
    "W605", # invalid escape sequence
    "BLE", # flake8-blind-except
    "TRY", # tryceratops
]

[tool.pytest.ini_options]
addopts = "-v"
testpaths = [
    "welt",
    "tests",
]
